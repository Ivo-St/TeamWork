import java.util.ArrayList;
import java.util.Collections;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

class Products implements Comparable<Products>{
    
    private String product;
    private double price;
   
    public Products(String product, double price){
            this.product = product;
            this.price = price;
    }
   
    public String getProduct(){
            return product;
    }
   
    public double getPrice(){
            return price;
    }
   
    public int compareTo(Products compareFruit) {
   
    double otherPrice = ((Products) compareFruit).getPrice();

    if(this.price > otherPrice){
            return 1;
    }
    else if(this.price == otherPrice){
            return 0;
    }
    else {
            return -1;
    }
    }  
}

public class _9ListOfProducts {
	public static void main(String[] args) {
		 
        BufferedReader br = null;
        BufferedWriter bw = null;
        ArrayList<Products> products = new ArrayList<Products>();

        try {

                String currentLine;

                br = new BufferedReader(new FileReader("Input_products.txt"));

                while ((currentLine = br.readLine()) != null) {
                       
                        String[] splitLine = currentLine.split(" ");
                       
                        products.add(new Products(splitLine[0], Double.parseDouble(splitLine[1])));

                }
                Collections.sort(products);
               
                bw = new BufferedWriter(new FileWriter("Output_products.txt"));
                for(Products product : products){
                        bw.write((double) product.getPrice()+ " " + product.getProduct() + "\r\n");
                }
               
                bw.close();
        } catch (Exception e) {
                System.out.println("Error!" + e);
        }finally {
                try {
                        if (br != null){
                                br.close();
                        }
                } catch (IOException ex) {
                        ex.printStackTrace();
                }
        }
}
}
